platform :ios, '15.6'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Debug-dev' => :debug,
  'Debug-prod' => :debug,
  'Profile' => :release,
  'Profile-dev' => :release,
  'Profile-prod' => :release,
  'Release' => :release,
  'Release-dev' => :release,
  'Release-prod' => :release,
}

use_frameworks! :linkage => :static
# or use_modular_headers! if you encounter static linking issues

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run flutter pub get first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}."
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

target 'OneSignalNotificationServiceExtension' do
  inherit! :search_paths
  pod 'OneSignalXCFramework', '>= 5.0.2', '<6.0'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
              '$(inherited)',
    
       ## dart: PermissionGroup.calendar
      'PERMISSION_EVENTS=1',
             
      ## dart: PermissionGroup.calendarFullAccess
      'PERMISSION_EVENTS_FULL_ACCESS=1',

      ## dart: PermissionGroup.reminders
      'PERMISSION_REMINDERS=1',

      ## dart: PermissionGroup.camera
      'PERMISSION_CAMERA=1',

      ## dart: PermissionGroup.microphone
      'PERMISSION_MICROPHONE=1',
      
      ## dart: PermissionGroup.photos
      'PERMISSION_PHOTOS=1',
      
      ## dart: PermissionGroup.locationWhenInUse
      'PERMISSION_LOCATION_WHENINUSE=1',

      ## dart: PermissionGroup.notification
      'PERMISSION_NOTIFICATIONS=1',

      ## dart: PermissionGroup.mediaLibrary
      'PERMISSION_MEDIA_LIBRARY=1',

      ## dart: PermissionGroup.appTrackingTransparency
     'PERMISSION_APP_TRACKING_TRANSPARENCY=1',
     
      ## dart: PermissionGroup.speech
      'PERMISSION_SPEECH_RECOGNIZER=0',

      ## The 'PERMISSION_LOCATION' macro enables the `locationWhenInUse` and `locationAlways` permission. If
      ## the application only requires `locationWhenInUse`, only specify the `PERMISSION_LOCATION_WHENINUSE`
      ## macro.
             
             
      ## dart: PermissionGroup.sensors
      'PERMISSION_SENSORS=0',

      ## dart: PermissionGroup.bluetooth
      'PERMISSION_BLUETOOTH=0',

              

      ## dart: PermissionGroup.criticalAlerts
      'PERMISSION_CRITICAL_ALERTS=1',
             
      ## dart: PermissionGroup.contacts
      'PERMISSION_CONTACTS=0',
      ]
      
      end
  end
end
